=head1 Boose

Boose is a lightweight Moose-like OO system for Perl5.

=head2 Moose-like DSL (but not required)

    package Car;
    use Boose 'Vehicle';

    with 'BreakableRole';

    has 'number';

=head2 Constructor

    package Car;
    use Boose 'Vehicle';

    has 'number';

    ...

    Car->new(number => 12345);

=head2 Accessors

    package Car;
    use Boose;

    has number => {default => 12345};

    has size => {default => 'big'};

    ...

    my $car = Car->new;

    $car->number;

    # or

    $car->get_number;

=head2 Chained mutators

    package Car;
    use Boose;

    has number => {default => 12345};

    has size => {default => 'big'};

    ...

    my $car = Car->new;
    $car->set_number(54321)->set_size('small');

=head2 Static attributes

    package Car;
    use Boose;

    static 'counter';

    ...

    Car->set_counter(0);
    Car->counter; # 0

    my $car = Car->new;
    $cart->set_counter(1);
    $car->counter; # 1
    Car->counter;  # 1

=head2 Roles

    package BreakableRole;
    use Boose::Role;

    sub break {}

    package Car;
    use Boose;

    with 'BreakableRole';

=head2 Exception classes and try/catch/finally syntax (provided by L<Try::Tiny>)

    package Car::Exception;
    use Boose '::Exception';

    has message => 'Car is broken';

    package Car;
    use Boose;

    sub break {
        try {
            die 42;
        }
        catch {
            throw 'Car::Exception';
        };
    }

=head2 Included implemented patterns

=over 4

=item Iterator

=item Decorator

=back

=head2 Forced requirement of Perl >= 5.10

=over 4

=item Switches on strict and warnings

=item Provides 5.10 features

=back

=head2 Moose-like syntax is not required

    package Car;

    use strict;
    use warnings;

    use base 'Boose::Base';

    __PACKAGE__->attr(number => {default => 12345});

    __PACKAGE__->add_role('Breakable');

    sub break {
        my $self = shift;

        $self->throw('Error!');
    }

=head2 Lightweight

Only really useful, tiny and one-thing-only modules are used.

=cut
